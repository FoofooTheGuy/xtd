"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[4342],{91971:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(76687);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,h=m["".concat(i,".").concat(d)]||m[d]||s[d]||a;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[m]="string"==typeof e?e:o,l[1]=c;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},13232:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=n(855),o=(n(76687),n(91971));const a={},l="Some useful git commands",c={unversionedId:"documentation/Internal/git",id:"documentation/Internal/git",title:"Some useful git commands",description:"Clone",source:"@site/docs/documentation/Internal/git.md",sourceDirName:"documentation/Internal",slug:"/documentation/Internal/git",permalink:"/xtd/docs/documentation/Internal/git",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Review open_file_box (**Internal use only**)",permalink:"/xtd/docs/documentation/Internal/code_review/save_file_box"},next:{title:"SpeechSynthesizer",permalink:"/xtd/docs/documentation/Internal/speech"}},i={},u=[{value:"Clone",id:"clone",level:2},{value:"Status",id:"status",level:2},{value:"Pull",id:"pull",level:2},{value:"Creation of a branch",id:"creation-of-a-branch",level:2},{value:"Checkout",id:"checkout",level:2},{value:"Commit",id:"commit",level:2},{value:"Merge",id:"merge",level:2},{value:"Remove branch",id:"remove-branch",level:2},{value:"GitHub Desktop application",id:"github-desktop-application",level:2}],p={toc:u},m="wrapper";function s(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"some-useful-git-commands"},"Some useful git commands"),(0,o.kt)("h2",{id:"clone"},"Clone"),(0,o.kt)("p",null,"In general this command is done only once.\nClone a remote project locally in your working folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd Projects\\xtd\ngit clone https://github.com/gammasoft71/xtd\n")),(0,o.kt)("h2",{id:"status"},"Status"),(0,o.kt)("p",null,"You are automatically on the master branch, you can check by typing the command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git status\n")),(0,o.kt)("h2",{id:"pull"},"Pull"),(0,o.kt)("p",null,"Every time you want to resynchronize your local repo with the remote repo to get the latest changes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git pull\n")),(0,o.kt)("h2",{id:"creation-of-a-branch"},"Creation of a branch"),(0,o.kt)("p",null,"If you want to create a dev branch "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git branch my_branch_dev1\n")),(0,o.kt)("p",null,"You have just created the branch but you are still on the active master branch."),(0,o.kt)("h2",{id:"checkout"},"Checkout"),(0,o.kt)("p",null,"If you want to work on your my_branch_dev1 branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git checkout my_branch_dev1\n")),(0,o.kt)("p",null,"The active branch is now my_branch_dev1."),(0,o.kt)("p",null,"If you want to go back to your master branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git checkout master\n")),(0,o.kt)("p",null,"The active branch is now master."),(0,o.kt)("h2",{id:"commit"},"Commit"),(0,o.kt)("p",null,"When you want to commit your files to any active branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'git commit -m "My commit message" --all\n')),(0,o.kt)("p",null,"or for a specific file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'git commit -m "My commit message" my_class.h\n')),(0,o.kt)("h2",{id:"merge"},"Merge"),(0,o.kt)("p",null,"When you want to merge your dev branch into master"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git checkout master\ngit merge my_branch_dev1\n")),(0,o.kt)("h2",{id:"remove-branch"},"Remove branch"),(0,o.kt)("p",null,"When you want to remove your dev branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git branch -d my_branch_dev1\n")),(0,o.kt)("h2",{id:"github-desktop-application"},"GitHub Desktop application"),(0,o.kt)("p",null,"When you have understood the principles of git branches and git commands, the easiest way is to use the ",(0,o.kt)("a",{parentName:"p",href:"https://desktop.github.com"},"GitHub Desktop")," application."))}s.isMDXComponent=!0}}]);